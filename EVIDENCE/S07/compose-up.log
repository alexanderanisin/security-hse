#1 [internal] load local bake definitions
#1 reading from stdin 581B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 394B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/python:3.14-slim
#3 ...

#4 [auth] library/python:pull token for registry-1.docker.io
#4 DONE 0.0s

#5 [internal] load metadata for ghcr.io/astral-sh/uv:latest
#5 DONE 1.6s

#3 [internal] load metadata for docker.io/library/python:3.14-slim
#3 DONE 1.8s

#6 [internal] load .dockerignore
#6 transferring context: 191B done
#6 DONE 0.0s

#7 [stage-0 1/7] FROM docker.io/library/python:3.14-slim@sha256:85c9a39ea0c4d940720080b9c233ff794e6bf461af0661cbc5a7ba7f77af996b
#7 resolve docker.io/library/python:3.14-slim@sha256:85c9a39ea0c4d940720080b9c233ff794e6bf461af0661cbc5a7ba7f77af996b 0.0s done
#7 DONE 0.0s

#8 FROM ghcr.io/astral-sh/uv:latest@sha256:f459f6f73a8c4ef5d69f4e6fbbdb8af751d6fa40ec34b39a1ab469acd6e289b7
#8 resolve ghcr.io/astral-sh/uv:latest@sha256:f459f6f73a8c4ef5d69f4e6fbbdb8af751d6fa40ec34b39a1ab469acd6e289b7 0.0s done
#8 DONE 0.0s

#9 [internal] load build context
#9 transferring context: 441.24kB 0.2s done
#9 DONE 0.2s

#10 [stage-0 2/7] COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /bin/
#10 CACHED

#11 [stage-0 3/7] WORKDIR /app
#11 CACHED

#12 [stage-0 4/7] COPY uv.lock pyproject.toml ./
#12 DONE 0.0s

#13 [stage-0 5/7] RUN uv sync --frozen --no-cache
#13 0.367 Using CPython 3.14.0 interpreter at: /usr/local/bin/python3
#13 0.367 Creating virtual environment at: .venv
#13 1.112 Downloading pydantic-core (1.9MiB)
#13 1.112 Downloading sqlalchemy (1.8MiB)
#13 1.464  Downloading sqlalchemy
#13 1.473  Downloading pydantic-core
#13 1.473 Prepared 28 packages in 1.08s
#13 1.496 Installed 28 packages in 22ms
#13 1.496  + aiosqlite==0.21.0
#13 1.496  + annotated-types==0.7.0
#13 1.496  + anyio==4.11.0
#13 1.496  + bcrypt==3.2.0
#13 1.496  + cffi==2.0.0
#13 1.496  + click==8.3.0
#13 1.496  + ecdsa==0.19.1
#13 1.496  + fastapi==0.119.0
#13 1.496  + greenlet==3.2.4
#13 1.496  + h11==0.16.0
#13 1.496  + idna==3.11
#13 1.496  + passlib==1.7.4
#13 1.496  + pyasn1==0.6.1
#13 1.496  + pycparser==2.23
#13 1.496  + pydantic==2.12.0
#13 1.496  + pydantic-core==2.41.1
#13 1.496  + pydantic-settings==2.11.0
#13 1.496  + python-dotenv==1.1.1
#13 1.496  + python-jose==3.5.0
#13 1.496  + python-multipart==0.0.20
#13 1.496  + rsa==4.9.1
#13 1.496  + six==1.17.0
#13 1.496  + sniffio==1.3.1
#13 1.496  + sqlalchemy==2.0.44
#13 1.496  + starlette==0.48.0
#13 1.496  + typing-extensions==4.15.0
#13 1.497  + typing-inspection==0.4.2
#13 1.497  + uvicorn==0.38.0
#13 DONE 1.6s

#14 [stage-0 6/7] COPY . .
#14 DONE 0.5s

#15 [stage-0 7/7] RUN adduser --disabled-password --gecos "" appuser && chown -R appuser:appuser /app
#15 0.201 usermod: no changes
#15 DONE 2.8s

#16 exporting to image
#16 exporting layers
#16 exporting layers 2.2s done
#16 exporting manifest sha256:a9e6db1cb5b4abac20bfbfb795c31ec7de9e2cffac00f370216297b3ab391681 done
#16 exporting config sha256:99c94f94fd4b0d4e83749a8cb6a3e2597aae77797d70ac7b5f506f95a25372c0 done
#16 exporting attestation manifest sha256:f2a090ca39811c2f87b3980b7d1fe2647b876c6ea48ef1ba2b6f0b68a6ae48fb done
#16 exporting manifest list sha256:4a896851a450c27c6592a417e89f8791ed0286d64654dd2d69972bf1376b7568 done
#16 naming to docker.io/library/security-app-hse-backend:latest done
#16 unpacking to docker.io/library/security-app-hse-backend:latest
#16 unpacking to docker.io/library/security-app-hse-backend:latest 0.9s done
#16 DONE 3.1s

#17 resolving provenance for metadata file
#17 DONE 0.0s
